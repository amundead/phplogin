apiVersion: apps/v1
kind: Deployment
metadata:
  name: phplogin-test
  labels:
    app: phplogin
spec:
  selector:
    matchLabels:
      octopusexport: OctopusExport
  replicas: 2
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: phplogin
        octopusexport: OctopusExport
    spec:
      hostNetwork: true
      #volumes:
        #- name: phplogin-disk
          #persistentVolumeClaim:
            #claimName: phploginpvc
      containers:
        - name: phplogin
          image: ghcr.io/amundead/phplogin:14.0 # {"$imagescans": "policy-1"}
          #ports:
            #- containerPort: 80
              #protocol: TCP
          env:
            - name: MYSQL_DATABASE
              value: demo
            - name: MYSQL_PASSWORD
              value: root_password
            - name: MYSQL_USERNAME
              value: root
            - name: MYSQL_HOST
              value: '172.26.16.61:3306'
          #volumeMounts:
            #- name: phplogin-disk
              #mountPath: /var/www/html/app
              #subPath: picture         
      securityContext:
        runAsNonRoot: false
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - web
                topologyKey: kubernetes.io/hostname
---

---
imageScans:
# specify the policy to retrieve images, can be semver or alphabetical order
- policy:
    # if range is specified, it will take the latest image according to semver order in the range
    # for more details on how to use semver, see https://github.com/Masterminds/semver
    semver:
      range: "*"
    # can use ascending or descending order
    alphabetical:
      order: asc

  # specify images to scan
  image: "ghcr.io/amundead/phplogin"

  # Specify the tag name, it has to be unique in the same bundle
  tagName: policy-1

  # specify secret to pull image if in private registry
 #secretRef:
   #name: phplogin

  # Specify the scan interval
  interval: 1m
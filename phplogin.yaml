apiVersion: apps/v1
kind: Deployment
metadata:
  name: phploginv14.0
  labels:
    app: phplogin
spec:
  selector:
    matchLabels:
      octopusexport: OctopusExport
  replicas: 2
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: phplogin
        octopusexport: OctopusExport
    spec:
      hostNetwork: true
      #volumes:
        #- name: phplogin-disk
          #persistentVolumeClaim:
            #claimName: phploginpvc
      containers:
        - name: phplogin
          image: 'amundead/phplogin:14.0' # {"$imagescans": "phploginscan:tag"}
          #ports:
            #- containerPort: 80
              #protocol: TCP
          env:
            - name: MYSQL_DATABASE
              value: demo
            - name: MYSQL_PASSWORD
              value: root_password
            - name: MYSQL_USERNAME
              value: root
            - name: MYSQL_HOST
              value: '172.26.16.61:3306'
          #volumeMounts:
            #- name: phplogin-disk
              #mountPath: /var/www/html/app
              #subPath: picture
    imageScans:
       - policy:
           semver:
            range: "*"
           alphabetical:
            order: asc
                # specify images to scan
          image: "amundead/phplogin"

                # Specify the tag name, it has to be unique in the same bundle
          tagName: phploginscan
              # Specify the scan interval
          interval: 1m          
      securityContext:
        runAsNonRoot: false
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - web
                topologyKey: kubernetes.io/hostname
